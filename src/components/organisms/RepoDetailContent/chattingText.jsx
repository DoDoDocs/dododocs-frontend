export const chattingText = [
  "The `AuthController` is a Spring REST controller responsible for handling authentication-related requests in the application. It provides several endpoints for OAuth authentication, token management, and user logout.\n\n### Endpoints and Responses\n\n1. **Generate OAuth URI**\n   - **Endpoint:** `GET /api/auth/{oAuthProvider}/link`\n   - **Description:** Generates a URI for the specified OAuth provider.\n   - **Response:** Returns an `OAuthUriResponse` containing the generated URI.\n\n2. **Login**\n   - **Endpoint:** `POST /api/auth/{oAuthProvider}/login`\n   - **Description:** Authenticates a user with the provided OAuth provider using a token request.\n   - **Request Body:** `TokenRequest` containing the OAuth code.\n   - **Response:** \n     - Status: `201 Created`\n     - Body: Returns an `AccessTokenResponse` with the generated access token.\n     - Sets a `refresh-token` cookie in the response.\n\n3. **Extend Login (Renew Access Token)**\n   - **Endpoint:** `POST /api/auth/extend/login`\n   - **Description:** Extends the login session by renewing the access token using a refresh token.\n   - **Request:** Requires a `refresh-token` cookie.\n   - **Response:** \n     - Status: `201 Created`\n     - Body: Returns a `RenewalAccessTokenResponse` with the renewed access token.\n\n4. **Logout**\n   - **Endpoint:** `DELETE /api/auth/logout`\n   - **Description:** Logs out the user by removing the refresh token.\n   - **Request:** Requires a `refresh-token` cookie.\n   - **Response:** \n     - Status: `204 No Content`\n     - No body content is returned.\n\nThe `AuthController` interacts with the `AuthService` to perform authentication logic, such as generating tokens and managing user sessions. It ensures secure handling of tokens and follows RESTful API principles."
  ,
  "`AuthController`는 인증 관련 요청을 처리하는 Spring REST 컨트롤러입니다. 이 컨트롤러는 OAuth 인증, 토큰 관리 및 로그아웃을 위한 여러 엔드포인트를 제공합니다.\n\n### 엔드포인트 및 응답\n\n1. **OAuth URI 생성**\n   - **엔드포인트:** `GET /api/auth/{oAuthProvider}/link`\n   - **설명:** 지정된 OAuth 제공자로부터 인증 URI를 생성합니다.\n   - **응답:** 상태 코드 200과 함께 `OAuthUriResponse`를 반환합니다.\n\n2. **로그인**\n   - **엔드포인트:** `POST /api/auth/{oAuthProvider}/login`\n   - **설명:** OAuth 제공자로부터 받은 코드를 사용하여 로그인하고, 액세스 토큰과 리프레시 토큰을 생성합니다.\n   - **요청 본문:** `TokenRequest` (OAuth 인증 코드 포함)\n   - **응답:** 상태 코드 201과 함께 `AccessTokenResponse`를 반환하며, 리프레시 토큰을 쿠키로 설정합니다.\n\n3. **로그인 연장 (리프레시 토큰 사용)**\n   - **엔드포인트:** `POST /api/auth/extend/login`\n   - **설명:** 리프레시 토큰을 사용하여 액세스 토큰을 갱신합니다.\n   - **요청:** 리프레시 토큰을 쿠키로 포함해야 합니다.\n   - **응답:** 상태 코드 201과 함께 갱신된 액세스 토큰을 포함한 응답을 반환합니다.\n\n4. **로그아웃**\n   - **엔드포인트:** `DELETE /api/auth/logout`\n   - **설명:** 사용자의 로그아웃을 처리하고 리프레시 토큰을 제거합니다.\n   - **요청:** 리프레시 토큰을 쿠키로 포함해야 합니다.\n   - **응답:** 상태 코드 204 (내용 없음)를 반환합니다.\n\n`AuthController`는 `AuthService`와 상호작용하여 인증 로직을 수행하며, 클라이언트의 요청에 대한 적절한 응답을 생성합니다."
  ,
  "`KakaoOAuthClient`에서 404 에러가 발생하는 경우, 일반적으로 다음과 같은 원인과 해결 방법이 있습니다:\n\n1. **잘못된 URI**: 요청하는 URI (`tokenUri` 또는 `userUri`)가 잘못되었을 수 있습니다. Kakao API의 문서를 확인하여 올바른 URI를 사용하고 있는지 검토하십시오.\n\n2. **잘못된 클라이언트 ID 또는 시크릿**: `clientId`나 `clientSecret`이 잘못된 경우에도 404 에러가 발생할 수 있습니다. Kakao 개발자 콘솔에서 해당 정보가 정확한지 확인하십시오.\n\n3. **리다이렉트 URI 불일치**: OAuth 인증 과정에서 설정한 리다이렉트 URI (`redirectUri`)가 Kakao 개발자 콘솔에 등록된 URI와 일치해야 합니다. 일치하지 않으면 404 에러가 발생할 수 있습니다.\n\n4. **API 사용 권한**: Kakao API 사용 권한이 없거나 적절하게 설정되지 않은 경우에도 404 에러가 발생할 수 있습니다. Kakao 개발자 콘솔에서 해당 API에 대한 권한이 부여되어 있는지 확인하십시오.\n\n5. **서버 문제**: Kakao OAuth 서버에 일시적인 문제가 있을 수 있습니다. 이 경우에는 잠시 후 다시 시도해 보십시오.\n\n이와 같은 점들을 점검하여 404 에러를 해결할 수 있습니다."
]